/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Menu.java
 *
 * Created on Nov 25, 2011, 1:33:47 PM
 */
package Analyzer;

import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author wilmercarranza
 */
public class Menu extends javax.swing.JFrame {

    /** Creates new form Menu */
    Main main;
    JFrame floydFrame;
    JFrame SReportFrame;
    JFrame kruskalFrame;
    USMap.USFrame USMap;

    public Menu(Main main) {
        this.main = main;
        initComponents();
        this.setLocationRelativeTo(getRootPane());
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subMenuDialog = new javax.swing.JDialog();
        showReport = new javax.swing.JButton();
        specificReport = new javax.swing.JButton();
        setInfo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        specificReportDialog = new javax.swing.JDialog();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        fromText = new javax.swing.JTextField();
        toText = new javax.swing.JTextField();
        proceedButton = new javax.swing.JButton();
        setInfoFrame = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        latencyTextField = new javax.swing.JTextField();
        setLatencyValueButton = new javax.swing.JButton();
        comboBox1 = new javax.swing.JComboBox();
        comboBox2 = new javax.swing.JComboBox();
        floyd = new javax.swing.JButton();
        artPoints = new javax.swing.JButton();
        kruskal = new javax.swing.JButton();
        title = new javax.swing.JLabel();

        subMenuDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        subMenuDialog.setTitle("Optimal Paths Options");

        showReport.setText("Show Report");
        showReport.setToolTipText("Shows the optimal path of every vertex, from every vertex.");
        showReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showReportActionPerformed(evt);
            }
        });

        specificReport.setText("Specific Report");
        specificReport.setToolTipText("Select a origin and destiny.");
        specificReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specificReportActionPerformed(evt);
            }
        });

        setInfo.setText("Set information");
        setInfo.setToolTipText("Set the latency between two links.");
        setInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setInfoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel1.setText("Select your option:");

        javax.swing.GroupLayout subMenuDialogLayout = new javax.swing.GroupLayout(subMenuDialog.getContentPane());
        subMenuDialog.getContentPane().setLayout(subMenuDialogLayout);
        subMenuDialogLayout.setHorizontalGroup(
            subMenuDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subMenuDialogLayout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addGroup(subMenuDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(showReport)
                    .addComponent(specificReport)
                    .addComponent(setInfo)
                    .addComponent(jLabel1))
                .addGap(130, 130, 130))
        );
        subMenuDialogLayout.setVerticalGroup(
            subMenuDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subMenuDialogLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(showReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specificReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setInfo)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        fromLabel.setFont(new java.awt.Font("Ubuntu", 1, 14));
        fromLabel.setText("From:");

        toLabel.setFont(new java.awt.Font("Ubuntu", 1, 14));
        toLabel.setText("To:");

        proceedButton.setText("Proceed");
        proceedButton.setToolTipText("Generates a report of the most optimal path between these cities.");
        proceedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout specificReportDialogLayout = new javax.swing.GroupLayout(specificReportDialog.getContentPane());
        specificReportDialog.getContentPane().setLayout(specificReportDialogLayout);
        specificReportDialogLayout.setHorizontalGroup(
            specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(specificReportDialogLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fromLabel)
                    .addComponent(toLabel))
                .addGap(18, 18, 18)
                .addGroup(specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(proceedButton)
                    .addGroup(specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(toText, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fromText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        specificReportDialogLayout.setVerticalGroup(
            specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, specificReportDialogLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(specificReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toLabel))
                .addGap(29, 29, 29)
                .addComponent(proceedButton)
                .addContainerGap())
        );

        setInfoFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setInfoFrame.setTitle("Set latency");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 14));
        jLabel2.setText("From:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 14));
        jLabel3.setText("To:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 14));
        jLabel4.setText("New latency");

        setLatencyValueButton.setText("OK");
        setLatencyValueButton.setToolTipText("OK");
        setLatencyValueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setLatencyValueButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout setInfoFrameLayout = new javax.swing.GroupLayout(setInfoFrame.getContentPane());
        setInfoFrame.getContentPane().setLayout(setInfoFrameLayout);
        setInfoFrameLayout.setHorizontalGroup(
            setInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setInfoFrameLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(setInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setInfoFrameLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(51, 51, 51))
                    .addGroup(setInfoFrameLayout.createSequentialGroup()
                        .addComponent(comboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65))
            .addGroup(setInfoFrameLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(setLatencyValueButton)
                .addContainerGap(197, Short.MAX_VALUE))
            .addGroup(setInfoFrameLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(setInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(latencyTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setInfoFrameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addGap(11, 11, 11)))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        setInfoFrameLayout.setVerticalGroup(
            setInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setInfoFrameLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(setInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(setInfoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(latencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(setLatencyValueButton)
                .addGap(28, 28, 28))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Main Menu");
        setBackground(new java.awt.Color(177, 177, 177));
        setForeground(java.awt.Color.lightGray);
        setResizable(false);

        floyd.setText("Optimal paths");
        floyd.setToolTipText("Searches for the most optimal paths. There are further options here.");
        floyd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                floydActionPerformed(evt);
            }
        });

        artPoints.setText("Atriculation Points");
        artPoints.setToolTipText("Shows links that are necessary for the network to work correctly.");
        artPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artPointsActionPerformed(evt);
            }
        });

        kruskal.setText("Minimal Spanning Tree");
        kruskal.setToolTipText("Shows the minimal cost between the necessary links only.");
        kruskal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kruskalActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        title.setText("Main Menu:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(floyd)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(artPoints)
                        .addGap(17, 17, 17))
                    .addComponent(kruskal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(40, 40, 40)))
                .addGap(110, 110, 110))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(title)
                .addGap(18, 18, 18)
                .addComponent(floyd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(artPoints)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kruskal)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void floydActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floydActionPerformed
    if (!this.subMenuDialog.isVisible()) {
        this.subMenuDialog.setSize(new Dimension(403, 316));
        this.subMenuDialog.setLocationRelativeTo(getRootPane());
        this.subMenuDialog.setResizable(false);
        this.subMenuDialog.setVisible(true);
    } else {
        subMenuDialog.setVisible(true);
    }

}//GEN-LAST:event_floydActionPerformed

    public void setMap(USMap.USFrame map) {
        this.USMap = map;
    }

private void kruskalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kruskalActionPerformed
    if (kruskalFrame == null) {
        ArrayList<Edge> edges = main.grafo.kruskal();
        String temp = "";
        for (Edge e : edges) {
            String[] connections = e.showConnections().split("\n");
            for (int i = 1; i < connections.length; i++) {
                temp += e.getName() + "\n" + connections[i] + "\n";
            }
        }
        if (USMap != null) {
            USMap.setVisible(false);
            USMap.paths(temp, true);
            USMap.setVisible(true);
        }
        String aux = main.grafo.minimalSpanningTreeToString();
        JTextArea info = new JTextArea("TOTAL COST: $ " + main.grafo.getTotalCost() + "\nMINIMAL COST APPLYING KRUSKAL: $ " + main.grafo.getMinimalCost() + "\nSAVINGS: $ "
                + (main.grafo.getTotalCost() - main.grafo.getMinimalCost())
                + "\n\nDETAILED REPORT:" + aux);
        info.setFont(new Font("Ubuntu", Font.TRUETYPE_FONT, 12));
        info.setEditable(false);
        JScrollPane scroll = new JScrollPane(info);
        kruskalFrame = new JFrame();
        kruskalFrame.setSize(new Dimension(450, 630));
        kruskalFrame.setResizable(false);
        kruskalFrame.setLocationRelativeTo(getRootPane());
        kruskalFrame.setVisible(true);
        WindowListener listener = new WindowAdapter() {

            @Override
            public void windowOpened(WindowEvent evt) {
                //el codigo de lo que queras hacer cuando se abre, va aca.
            }

            @Override
            public void windowClosing(WindowEvent evt) {
                kruskalFrame = null;
            }

            @Override
            public void windowClosed(WindowEvent evt) {
            }
        };
        kruskalFrame.add(new JPanel() {

            {
                setBackground(Color.WHITE);
            }
        });
        kruskalFrame.addWindowListener(listener);
        kruskalFrame.getContentPane().add(scroll);
        this.setVisible(true);
    } else {
        if (USMap != null) {
            USMap.setVisible(true);
            kruskalFrame.setVisible(true);
            this.setVisible(true);
        }
    }
}//GEN-LAST:event_kruskalActionPerformed

private void showReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showReportActionPerformed
    if (floydFrame == null) {
        main.grafo.floyd();
        JTextArea info = new JTextArea("REPORT:\n" + main.grafo.getAllPaths());
        info.setFont(new Font("Ubuntu", Font.TRUETYPE_FONT, 12));
        info.setEditable(false);
        JScrollPane scroll = new JScrollPane(info);
        floydFrame = new JFrame("Report");
        floydFrame.setSize(new Dimension(400, 650));
        floydFrame.setResizable(false);
        floydFrame.setLocationRelativeTo(getRootPane());
        floydFrame.setVisible(true);
        floydFrame.add(new JPanel() {

            {
                setBackground(Color.WHITE);
            }
        });
        floydFrame.getContentPane().add(scroll);
    } else {
        floydFrame.setVisible(true);
    }
}//GEN-LAST:event_showReportActionPerformed

private void proceedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedButtonActionPerformed
    if (this.fromText.getText().isEmpty() || this.toText.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Cannot continue, there is information missing.");
    } else {
        if (this.SReportFrame == null) {
            try {
                SReportFrame = new JFrame("Report");
                if (USMap != null) {
                    USMap.setVisible(false);
                    main.grafo.floyd();
                    String s = main.grafo.getEdge(fromText.getText()).getName() + "\n"
                            + main.grafo.getOPath(fromText.getText(), toText.getText())
                            + main.grafo.getEdge(toText.getText()).getName();
                    USMap.paths(s, false);
                    USMap.setVisible(true);
                }
                JTextArea info = new JTextArea("REPORT:\n" + "\n<<From " + main.grafo.getEdge(fromText.getText()).getName() + " to " + main.grafo.getEdge(toText.getText()).getName() + " path>>: \n" + main.grafo.getOPath(fromText.getText(), toText.getText()));
                fromText.setText("");
                toText.setText("");
                info.setFont(new Font("Ubuntu", Font.TRUETYPE_FONT, 12));
                info.setEditable(false);
                JScrollPane scroll = new JScrollPane(info);
                SReportFrame.setSize(new Dimension(400, 450));
                SReportFrame.setResizable(false);
                SReportFrame.setLocationRelativeTo(getRootPane());
                SReportFrame.setVisible(true);
                SReportFrame.add(new JPanel() {

                    {
                        setBackground(Color.WHITE);
                    }
                });
                SReportFrame.getContentPane().add(scroll);
                SReportFrame = null; //solo lo pongo en null para que vuelva temp hacer todo de nuevo

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Those cities are not registered, please try again.");
                SReportFrame.setVisible(false);
                SReportFrame = null;
            }

        } else {
            SReportFrame.setVisible(true);
        }
    }

}//GEN-LAST:event_proceedButtonActionPerformed

private void specificReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specificReportActionPerformed
    if (!this.specificReportDialog.isVisible()) {
        this.specificReportDialog.setSize(new Dimension(354, 171));
        this.specificReportDialog.setLocationRelativeTo(getRootPane());
        this.specificReportDialog.setResizable(false);
        this.specificReportDialog.setVisible(true);
    } else {
        this.specificReportDialog.setVisible(true);
    }

}//GEN-LAST:event_specificReportActionPerformed

private void artPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_artPointsActionPerformed
    // TODO add your handling code here:
    USMap.setVisible(false);
    //1. traer los puntos
    main.grafo.restoreVisits(main.grafo.getEdges());
    main.grafo.fillTree(main.grafo.getEdges().get(0), main.grafo.getEdges(), null);
    main.grafo.articulationPoints();
    ArrayList<Edge> articulationPoints = main.grafo.articulationPoints;
    String s = "";
    for (Edge e : articulationPoints) {
        s += e.getName() + "\n";
    }
    for (Edge i : main.grafo.getEdges()) {
        i.searchNumber = 0;
        i.low = 0;
        i.retroceso.clear();
        i.hijos.clear();
    }
    //2.llamar temp un metodo que los edite
    USMap.edges(s);
    USMap.setVisible(true);
    this.setVisible(true);
}//GEN-LAST:event_artPointsActionPerformed

private void setLatencyValueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setLatencyValueButtonActionPerformed
    String origin = (String) comboBox1.getSelectedItem();
    String destino = (String) comboBox2.getSelectedItem();
    if (main.grafo.getEdge(origin).isLinkedWith(main.grafo.getEdge(destino))) {
        if (this.latencyTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please input a latency value.");
        } else {
            try {
                double temp = Double.parseDouble(latencyTextField.getText());
                if (temp < 0) {
                    JOptionPane.showMessageDialog(null, "Error: negative value.");
                } else {
                    main.grafo.getEdge(origin).setLatency(main.grafo.getEdge(destino), latencyTextField.getText());
                    main.grafo.getEdge(destino).setLatency(main.grafo.getEdge(origin), latencyTextField.getText());
                    main.grafo.matrixL[main.grafo.getEdge(origin).getNumber()][main.grafo.getEdge(destino).getNumber()] = main.grafo.getEdge(origin).getLatency(main.grafo.getEdge(destino));
                    main.grafo.matrixL[main.grafo.getEdge(destino).getNumber()][main.grafo.getEdge(origin).getNumber()] = main.grafo.getEdge(destino).getLatency(main.grafo.getEdge(origin));
                    this.floydFrame = null;
                    this.setInfoFrame.dispose();
                    this.latencyTextField.setText("");
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Error: there is no connection between these two cities.");
        latencyTextField.setText("");
    }
}//GEN-LAST:event_setLatencyValueButtonActionPerformed

private void setInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setInfoActionPerformed
    if (!setInfoFrame.isVisible()) {
        this.setInfoFrame.setSize(new Dimension(415, 246));
        this.setInfoFrame.setLocationRelativeTo(getRootPane());
        this.setInfoFrame.setResizable(false);
        this.setInfoFrame.setVisible(true);
        for (Edge e : this.main.grafo.getEdges()) {
            this.comboBox1.addItem((String) e.getName());
            this.comboBox2.addItem((String) e.getName());
        }
    } else {
        setInfoFrame.setVisible(true);
    }
}//GEN-LAST:event_setInfoActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton artPoints;
    private javax.swing.JComboBox comboBox1;
    private javax.swing.JComboBox comboBox2;
    private javax.swing.JButton floyd;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JTextField fromText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton kruskal;
    private javax.swing.JTextField latencyTextField;
    private javax.swing.JButton proceedButton;
    private javax.swing.JButton setInfo;
    private javax.swing.JDialog setInfoFrame;
    private javax.swing.JButton setLatencyValueButton;
    private javax.swing.JButton showReport;
    private javax.swing.JButton specificReport;
    private javax.swing.JDialog specificReportDialog;
    private javax.swing.JDialog subMenuDialog;
    private javax.swing.JLabel title;
    private javax.swing.JLabel toLabel;
    private javax.swing.JTextField toText;
    // End of variables declaration//GEN-END:variables
}
