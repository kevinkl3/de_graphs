/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on Nov 24, 2011, 12:23:21 PM
 */
package Analyzer;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author wilmercarranza
 */
public class Main extends JFrame {

    private String ruta = "";
    Graph grafo;
    JFrame aboutFrame;
    JFrame report;
    Menu menu;
    JFrame map;

    /** Creates new form Main */
    public Main() {
        initComponents();
        this.setLocationRelativeTo(getRootPane());//para dejarlo en medio de la pantalla :)
    }

    public Graph getGrafo() {
        return this.grafo;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        chooseFileButton = new javax.swing.JButton();
        welcome = new javax.swing.JLabel();
        continueButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        showMapMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        documentation = new javax.swing.JMenuItem();
        about = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WLAN Analyzer");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        chooseFileButton.setText("Choose File");
        chooseFileButton.setToolTipText("Click to find your file.");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        welcome.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        welcome.setText("Welcome to WLAN Analyzer!");

        continueButton.setText("Continue");
        continueButton.setToolTipText("Enabled when the file is read correctly.");
        continueButton.setEnabled(false);
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });

        file.setText("File");

        showMapMenuItem.setText("Show Map");
        showMapMenuItem.setToolTipText("Shows every state in a map.");
        showMapMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMapMenuItemActionPerformed(evt);
            }
        });
        file.add(showMapMenuItem);

        closeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        closeMenuItem.setText("Close");
        closeMenuItem.setToolTipText("Close this program.");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        file.add(closeMenuItem);

        menuBar.add(file);

        help.setText("Help");

        documentation.setText("Documentation");
        documentation.setToolTipText("A quick review about how to use this software.");
        documentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentationActionPerformed(evt);
            }
        });
        help.add(documentation);

        about.setText("About");
        about.setToolTipText("Information about developers.");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        help.add(about);

        menuBar.add(help);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(continueButton)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(chooseFileButton)
                        .addGap(154, 154, 154))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(welcome)
                        .addGap(94, 94, 94))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(welcome)
                .addGap(29, 29, 29)
                .addComponent(chooseFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(continueButton)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed

    JFileChooser fileChooser = new JFileChooser();
    int result = fileChooser.showOpenDialog(null);
    if (result == JFileChooser.APPROVE_OPTION) {
        try {
            ruta = fileChooser.getSelectedFile().getAbsolutePath();
            grafo = new Graph(new Read().createCities(ruta));
            continueButton.setEnabled(true);
            continueButton.setToolTipText("Continue for basic procedures.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(getRootPane(), "An error occured, the file cannot be read.");
        }
    }
}//GEN-LAST:event_chooseFileButtonActionPerformed

private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
    System.exit(0);
}//GEN-LAST:event_closeMenuItemActionPerformed

private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
    if (aboutFrame == null) {
        aboutFrame = new JFrame();
        aboutFrame.setSize(new Dimension(350, 350));
        aboutFrame.setResizable(false);
        aboutFrame.setLocationRelativeTo(getRootPane());
        aboutFrame.setVisible(true);
        aboutFrame.add(new JPanel() {

            {
                setBackground(Color.WHITE);
                add(new JTextPane() {

                    {
                        setFont(new Font("Ubuntu", Font.TRUETYPE_FONT, 13));
                        setText("\n\n\nWLAN Analyzer version 3.1.1.84\n\n\nAbout the authors:\n->SaÃºl Cabrera (11041338)\n->Wilmer Carranza (11011227)"
                                + "\n\n\n\nProject done for: \"Estructura de datos\"");
                        setEditable(false);
                    }
                });
            }
        });
    } else {
        aboutFrame.setVisible(true);
    }
}//GEN-LAST:event_aboutActionPerformed

private void showMapMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMapMenuItemActionPerformed
    if (map == null) {

        map = new JFrame("USA Map");
        map.setSize(new Dimension(864, 606));
        map.setResizable(false);
        map.setVisible(true);
        map.setLocationRelativeTo(getRootPane());
        BufferedImage image = null;
        try {
            image = ImageIO.read(new File("USA_small.jpg"));
            JLabel picLabel = new JLabel(new ImageIcon(image));
            map.add(picLabel);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(getRootPane(), ex.getMessage());
            map.dispose();
        }
    } else {
        map.setVisible(true);
    }
}//GEN-LAST:event_showMapMenuItemActionPerformed

private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
    try {
        Read r = new Read();
        r.createCities(ruta);
        USMap.USFrame mapa = new USMap.USFrame(r.getCadena());
        mapa.setVisible(true);
        if (menu == null) {
            menu = new Menu(this);
        } else {
            menu.setVisible(true);
        }
        menu.setMap(mapa);
        grafo.toString();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Cities not registered, cannot display map.");
    }

    //necesito las dos primeras columnas de file.csv///home/wilmercarranza/NetBeansProjects/Proyecto2ED/Documentation
}//GEN-LAST:event_continueButtonActionPerformed

private void documentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentationActionPerformed
    try {
        File document = new File("Documentation/User_SManual.pdf");
        if (document.exists()) {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(document);
            } else {
                JOptionPane.showMessageDialog(null, "Not supported.");
            }

        } else {
            JOptionPane.showMessageDialog(null, "No such file!");
        }

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
}//GEN-LAST:event_documentationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JButton continueButton;
    private javax.swing.JMenuItem documentation;
    private javax.swing.JMenu file;
    private javax.swing.JMenu help;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem showMapMenuItem;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
